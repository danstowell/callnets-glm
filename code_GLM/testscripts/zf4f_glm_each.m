% script to run the GLM fitting on a sequence of data chunks from CSV files of calling data

plotcols = {'r', 'b', 'g', 'm'};

% TODO resim goes in here too

setses = { ...
struct('dataname', 'session2full', 'variantname', 'a', 'indexmapper', [4,3,2,1], 'startsecs',  300, 'endsecs', 1200, 'resimuldur', 600), ...
struct('dataname', 'session2full', 'variantname', 'b', 'indexmapper', [4,3,2,1], 'startsecs', 1200, 'endsecs', 2100, 'resimuldur', 0), ...
struct('dataname', 'session2full', 'variantname', 'c', 'indexmapper', [4,3,2,1], 'startsecs', 2100, 'endsecs', 3000, 'resimuldur', 0), ...
struct('dataname', 'session2full', 'variantname', 'd', 'indexmapper', [4,3,2,1], 'startsecs', 3000, 'endsecs', 3900, 'resimuldur', 0), ...
struct('dataname', 'session3full', 'variantname', 'a', 'indexmapper', [1,2,3,4], 'startsecs',  350, 'endsecs', 1250, 'resimuldur', 0), ...
struct('dataname', 'session3full', 'variantname', 'b', 'indexmapper', [1,2,3,4], 'startsecs', 1250, 'endsecs', 2150, 'resimuldur', 0), ...
struct('dataname', 'session3full', 'variantname', 'c', 'indexmapper', [1,2,3,4], 'startsecs', 2150, 'endsecs', 3050, 'resimuldur', 0), ...
struct('dataname', 'session3full', 'variantname', 'd', 'indexmapper', [1,2,3,4], 'startsecs', 3050, 'endsecs', 3950, 'resimuldur', 0), ...
struct('dataname', 'session2full', 'variantname', '', 'indexmapper', [4,3,2,1], 'startsecs',  300, 'endsecs', 3900, 'resimuldur', 600), ...
struct('dataname', 'session3full', 'variantname', '', 'indexmapper', [1,2,3,4], 'startsecs',  350, 'endsecs', 3950, 'resimuldur', 600), ...
%
struct('runname', 'session2full_resim', 'indexmapper', [4,3,2,1], 'startsecs',  0, 'endsecs', 60000, 'resimuldur', 0, 'datapath', sprintf('%s/zf4f_glm_stats_session2fullsof_resimulated', csvoutdir)), ...
struct('runname', 'session3full_resim', 'indexmapper', [4,3,2,1], 'startsecs',  0, 'endsecs', 60000, 'resimuldur', 0, 'datapath', sprintf('%s/zf4f_glm_stats_session3fullsof_resimulated', csvoutdir)), ...
%
%struct('dataname', 'gill/gill_rawfile_1ind', 'variantname', 'all', 'indexmapper', 1:8, 'startsecs', 0, 'endsecs', 14400, 'resimuldur', 0), ...
%struct('dataname', 'gill/gill_rawfile_2ind', 'variantname', 'all', 'indexmapper', 1:8, 'startsecs', 0, 'endsecs', 14400, 'resimuldur', 0), ...
%struct('dataname', 'gill/gill_rawfile_3ind', 'variantname', 'all', 'indexmapper', 1:8, 'startsecs', 0, 'endsecs', 14400, 'resimuldur', 0), ...
%struct('dataname', 'gill/gill_rawfile_4ind', 'variantname', 'all', 'indexmapper', 1:8, 'startsecs', 0, 'endsecs', 14400, 'resimuldur', 0), ...
%struct('dataname', 'gill/gill_rawfile_5ind', 'variantname', 'all', 'indexmapper', 1:8, 'startsecs', 0, 'endsecs', 14400, 'resimuldur', 0), ...
%struct('dataname', 'gill/gill_rawfile_6ind', 'variantname', 'all', 'indexmapper', 1:8, 'startsecs', 0, 'endsecs', 14400, 'resimuldur', 0), ...
%struct('dataname', 'gill/gill_rawfile_7ind', 'variantname', 'all', 'indexmapper', 1:8, 'startsecs', 0, 'endsecs', 14400, 'resimuldur', 0), ...
%
%struct('dataname', 'gill/gill_rawfile_1type', 'variantname', 'all', 'indexmapper', 1:40, 'startsecs', 0, 'endsecs', 14400, 'resimuldur', 0), ...
%struct('dataname', 'gill/gill_rawfile_2type', 'variantname', 'all', 'indexmapper', 1:40, 'startsecs', 0, 'endsecs', 14400, 'resimuldur', 0), ...
%struct('dataname', 'gill/gill_rawfile_3type', 'variantname', 'all', 'indexmapper', 1:40, 'startsecs', 0, 'endsecs', 14400, 'resimuldur', 0), ...
%struct('dataname', 'gill/gill_rawfile_4type', 'variantname', 'all', 'indexmapper', 1:40, 'startsecs', 0, 'endsecs', 14400, 'resimuldur', 0), ...
%struct('dataname', 'gill/gill_rawfile_5type', 'variantname', 'all', 'indexmapper', 1:40, 'startsecs', 0, 'endsecs', 14400, 'resimuldur', 0), ...
%struct('dataname', 'gill/gill_rawfile_6type', 'variantname', 'all', 'indexmapper', 1:40, 'startsecs', 0, 'endsecs', 14400, 'resimuldur', 0), ...
%struct('dataname', 'gill/gill_rawfile_7type', 'variantname', 'all', 'indexmapper', 1:40, 'startsecs', 0, 'endsecs', 14400, 'resimuldur', 0), ...
};


nlfuns = {@softplus, @expfun};
for whichnlf = 1:length(nlfuns)
	nlfun = nlfuns{whichnlf};
	nlname = func2str(nlfun)(1:3);
	numcalls   = struct();
	resultspos = struct();
	resultsval = struct();
	negloglis  = struct();
	dcs        = struct();
	for whichset=1:size(setses,2)
		d = setses{whichset};
		if whichnlf==1 || whichnlf==2
			resimuldur = d.resimuldur;
		else
			resimuldur = 0;
		end
		runname = sprintf('%s%s', d.dataname, d.variantname);
		runlabel = sprintf('%s%s%s', d.dataname, d.variantname, func2str(nlfun)(1:3));
		csvpath = sprintf('../data/zf4f/zcompiled_%s.csv', d.dataname);

		disp(sprintf('Fitting with nonlin %s on %s', func2str(nlfun), csvpath));

		k = length(d.indexmapper);
		regln = -1; % NOTE default regularisation strength here
		[numcalls.(runname), resultspos.(runname), resultsval.(runname), negloglis.(runname), dcs.(runname)] = dofit_fromcsv_GLM_zf4f(csvpath, runlabel, k, d.indexmapper, d.startsecs, d.endsecs, regln, 'outplot', 'outcsv', d.resimuldur, nlfun);
	end
end;

